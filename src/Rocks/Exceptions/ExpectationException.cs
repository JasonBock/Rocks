namespace Rocks.Exceptions;

/// <summary>
/// Thrown when an expectation has not been met in a mock object.
/// </summary>
[Serializable]
public sealed class ExpectationException
	 : Exception
{
	/// <summary>
	/// Creates a new <see cref="ExpectationException"/> instance
	/// with the specified message.
	/// </summary>
	/// <param name="message">The message.</param>
	public ExpectationException(string message)
		: base(message) { }

	/// <summary>
	/// Throws an <see cref="ExpectationException"/> instance
	/// if <paramref name="wasInstanceInvoked"/> is <code>true</code>.
	/// </summary>
	/// <param name="wasInstanceInvoked">Specifies if the mock has been made.</param>
	/// <exception cref="ExpectationException"></exception>
	/// <remarks>
	/// This is meant to be called by expectation handlers
	/// generated by Rocks.
	/// </remarks>
	public static void ThrowIf(bool wasInstanceInvoked)
	{
		if (wasInstanceInvoked)
		{
			throw new ExpectationException("Cannot add an expectations after the mock has been created.");
		}
	}
}