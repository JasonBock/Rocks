using Microsoft.CodeAnalysis.Testing;
using NUnit.Framework;

namespace Rocks.Tests.Generators;

public static class RefStructGeneratorTests
{
	[Test]
	public static async Task GenerateWithSpanOfTAsync()
	{
		var code =
			"""
			using Rocks;
			using System;

			public interface IHaveSpans
			{
				Span<int> Foo(Span<int> values);
				Span<byte> Values { get; set; }
			}
						
			public static class Test
			{
				public static void Go() => Rock.Create<IHaveSpans>();
			}
			""";

		var generatedCode =
			"""
			// <auto-generated/>
			
			#nullable enable
			
			using ProjectionsForIHaveSpans;
			using Rocks.Extensions;
			using System.Collections.Generic;
			using System.Collections.Immutable;
			
			namespace ProjectionsForIHaveSpans
			{
				internal delegate global::System.Span<int> FooCallback_66561015379568062927102038977019508240052860641(global::System.Span<int> @values);
				internal delegate global::System.Span<int> FooReturnValue_66561015379568062927102038977019508240052860641();
				internal delegate global::System.Span<byte> get_ValuesCallback_582583672052025768205427892801117290935185139605();
				internal delegate global::System.Span<byte> get_ValuesReturnValue_582583672052025768205427892801117290935185139605();
				internal delegate void set_ValuesCallback_319151028473084578244445387582248500102792854657(global::System.Span<byte> @value);
				internal delegate bool ArgEvaluationForSpanOfint(global::System.Span<int> @value);
				
				internal sealed class ArgForSpanOfint
					: global::Rocks.Argument
				{
					private readonly global::ProjectionsForIHaveSpans.ArgEvaluationForSpanOfint? evaluation;
					private readonly global::Rocks.ValidationState validation;
					
					internal ArgForSpanOfint() => this.validation = global::Rocks.ValidationState.None;
					
					internal ArgForSpanOfint(global::ProjectionsForIHaveSpans.ArgEvaluationForSpanOfint @evaluation)
					{
						this.evaluation = @evaluation;
						this.validation = global::Rocks.ValidationState.Evaluation;
					}
					
					public bool IsValid(global::System.Span<int> @value) =>
						this.validation switch
						{
							global::Rocks.ValidationState.None => true,
							global::Rocks.ValidationState.Evaluation => this.evaluation!(@value),
							_ => throw new global::System.NotSupportedException("Invalid validation state."),
						};
				}
				internal delegate bool ArgEvaluationForSpanOfbyte(global::System.Span<byte> @value);
				
				internal sealed class ArgForSpanOfbyte
					: global::Rocks.Argument
				{
					private readonly global::ProjectionsForIHaveSpans.ArgEvaluationForSpanOfbyte? evaluation;
					private readonly global::Rocks.ValidationState validation;
					
					internal ArgForSpanOfbyte() => this.validation = global::Rocks.ValidationState.None;
					
					internal ArgForSpanOfbyte(global::ProjectionsForIHaveSpans.ArgEvaluationForSpanOfbyte @evaluation)
					{
						this.evaluation = @evaluation;
						this.validation = global::Rocks.ValidationState.Evaluation;
					}
					
					public bool IsValid(global::System.Span<byte> @value) =>
						this.validation switch
						{
							global::Rocks.ValidationState.None => true,
							global::Rocks.ValidationState.Evaluation => this.evaluation!(@value),
							_ => throw new global::System.NotSupportedException("Invalid validation state."),
						};
				}
			}
			
			internal static class CreateExpectationsOfIHaveSpansExtensions
			{
				internal static global::Rocks.Expectations.MethodExpectations<global::IHaveSpans> Methods(this global::Rocks.Expectations.Expectations<global::IHaveSpans> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertyExpectations<global::IHaveSpans> Properties(this global::Rocks.Expectations.Expectations<global::IHaveSpans> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertyGetterExpectations<global::IHaveSpans> Getters(this global::Rocks.Expectations.PropertyExpectations<global::IHaveSpans> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertySetterExpectations<global::IHaveSpans> Setters(this global::Rocks.Expectations.PropertyExpectations<global::IHaveSpans> @self) =>
					new(@self);
				
				internal static global::IHaveSpans Instance(this global::Rocks.Expectations.Expectations<global::IHaveSpans> @self)
				{
					if (!@self.WasInstanceInvoked)
					{
						@self.WasInstanceInvoked = true;
						var @mock = new RockIHaveSpans(@self);
						@self.MockType = @mock.GetType();
						return @mock;
					}
					else
					{
						throw new global::Rocks.Exceptions.NewMockInstanceException("Can only create a new mock once.");
					}
				}
				
				private sealed class RockIHaveSpans
					: global::IHaveSpans
				{
					private readonly global::System.Collections.Generic.Dictionary<int, global::System.Collections.Generic.List<global::Rocks.HandlerInformation>> handlers;
					
					public RockIHaveSpans(global::Rocks.Expectations.Expectations<global::IHaveSpans> @expectations)
					{
						this.handlers = @expectations.Handlers;
					}
					
					[global::Rocks.MemberIdentifier(0, "global::System.Span<int> Foo(global::System.Span<int> @values)")]
					public global::System.Span<int> Foo(global::System.Span<int> @values)
					{
						if (this.handlers.TryGetValue(0, out var @methodHandlers))
						{
							foreach (var @methodHandler in @methodHandlers)
							{
								if (((global::ProjectionsForIHaveSpans.ArgForSpanOfint)@methodHandler.Expectations[0]).IsValid(@values!))
								{
									@methodHandler.IncrementCallCount();
									var @result = @methodHandler.Method is not null ?
										((global::ProjectionsForIHaveSpans.FooCallback_66561015379568062927102038977019508240052860641)@methodHandler.Method)(@values!) :
										((global::Rocks.HandlerInformation<global::ProjectionsForIHaveSpans.FooReturnValue_66561015379568062927102038977019508240052860641>)@methodHandler).ReturnValue!.Invoke();
									return @result!;
								}
							}
							
							throw new global::Rocks.Exceptions.ExpectationException("No handlers match for global::System.Span<int> Foo(global::System.Span<int> @values)");
						}
						
						throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for global::System.Span<int> Foo(global::System.Span<int> @values)");
					}
					
					[global::Rocks.MemberIdentifier(1, "get_Values()")]
					[global::Rocks.MemberIdentifier(2, "set_Values(value)")]
					public global::System.Span<byte> Values
					{
						get
						{
							if (this.handlers.TryGetValue(1, out var @methodHandlers))
							{
								var @methodHandler = @methodHandlers[0];
								@methodHandler.IncrementCallCount();
								var @result = @methodHandler.Method is not null ?
									((global::ProjectionsForIHaveSpans.get_ValuesCallback_582583672052025768205427892801117290935185139605)@methodHandler.Method)() :
									((global::Rocks.HandlerInformation<global::ProjectionsForIHaveSpans.get_ValuesReturnValue_582583672052025768205427892801117290935185139605>)@methodHandler).ReturnValue!.Invoke();
								return @result!;
							}
							
							throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for get_Values())");
						}
						set
						{
							if (this.handlers.TryGetValue(2, out var @methodHandlers))
							{
								var @foundMatch = false;
								foreach (var @methodHandler in @methodHandlers)
								{
									if (((global::ProjectionsForIHaveSpans.ArgForSpanOfbyte)@methodHandler.Expectations[0]).IsValid(value!))
									{
										@methodHandler.IncrementCallCount();
										@foundMatch = true;
										
										if (@methodHandler.Method is not null)
										{
											((global::ProjectionsForIHaveSpans.set_ValuesCallback_319151028473084578244445387582248500102792854657)@methodHandler.Method)(value!);
										}
										
										if (!@foundMatch)
										{
											throw new global::Rocks.Exceptions.ExpectationException("No handlers match for set_Values(value)");
										}
										
										break;
									}
								}
							}
							else
							{
								throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for set_Values(value)");
							}
						}
					}
				}
			}
			
			internal static class MethodExpectationsOfIHaveSpansExtensions
			{
				internal static global::Rocks.MethodAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.FooCallback_66561015379568062927102038977019508240052860641, global::ProjectionsForIHaveSpans.FooReturnValue_66561015379568062927102038977019508240052860641> Foo(this global::Rocks.Expectations.MethodExpectations<global::IHaveSpans> @self, global::ProjectionsForIHaveSpans.ArgForSpanOfint @values)
				{
					global::System.ArgumentNullException.ThrowIfNull(@values);
					return new global::Rocks.MethodAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.FooCallback_66561015379568062927102038977019508240052860641, global::ProjectionsForIHaveSpans.FooReturnValue_66561015379568062927102038977019508240052860641>(@self.Add<global::ProjectionsForIHaveSpans.FooReturnValue_66561015379568062927102038977019508240052860641>(0, new global::System.Collections.Generic.List<global::Rocks.Argument>(1) { @values }));
				}
			}
			
			internal static class PropertyGetterExpectationsOfIHaveSpansExtensions
			{
				internal static global::Rocks.PropertyAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.get_ValuesCallback_582583672052025768205427892801117290935185139605, global::ProjectionsForIHaveSpans.get_ValuesReturnValue_582583672052025768205427892801117290935185139605> Values(this global::Rocks.Expectations.PropertyGetterExpectations<global::IHaveSpans> @self) =>
					new global::Rocks.PropertyAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.get_ValuesCallback_582583672052025768205427892801117290935185139605, global::ProjectionsForIHaveSpans.get_ValuesReturnValue_582583672052025768205427892801117290935185139605>(@self.Add<global::ProjectionsForIHaveSpans.get_ValuesReturnValue_582583672052025768205427892801117290935185139605>(1, new global::System.Collections.Generic.List<global::Rocks.Argument>()));
			}
			internal static class PropertySetterExpectationsOfIHaveSpansExtensions
			{
				internal static global::Rocks.PropertyAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.set_ValuesCallback_319151028473084578244445387582248500102792854657> Values(this global::Rocks.Expectations.PropertySetterExpectations<global::IHaveSpans> @self, global::Rocks.Argument<global::ProjectionsForIHaveSpans.ArgForSpanOfbyte> @value) =>
					new global::Rocks.PropertyAdornments<global::IHaveSpans, global::ProjectionsForIHaveSpans.set_ValuesCallback_319151028473084578244445387582248500102792854657>(@self.Add(2, new global::System.Collections.Generic.List<global::Rocks.Argument>(1) { @value }));
			}
			
			""";

		await TestAssistants.RunAsync<RockCreateGenerator>(code,
			new[] { (typeof(RockCreateGenerator), "IHaveSpans_Rock_Create.g.cs", generatedCode) },
			Enumerable.Empty<DiagnosticResult>()).ConfigureAwait(false);
	}

	[Test]
	public static async Task GenerateWithCustomRefStructAsync()
	{
		var code =
			"""
			using Rocks;
			using System;

			public ref struct Custom
			{
			    public int Number { get; set; }
			}
			
			public interface IHaveCustomRefStruct
			{
				Custom Foo(Custom values);
				Custom Values { get; set; }
			}
						
			public static class Test
			{
				public static void Go() => Rock.Create<IHaveCustomRefStruct>();
			}
			""";

		var generatedCode =
			"""
			// <auto-generated/>
			
			#nullable enable
			
			using ProjectionsForIHaveCustomRefStruct;
			using Rocks.Extensions;
			using System.Collections.Generic;
			using System.Collections.Immutable;
			
			namespace ProjectionsForIHaveCustomRefStruct
			{
				internal delegate global::Custom FooCallback_247090787197721297604732917092203102821567031853(global::Custom @values);
				internal delegate global::Custom FooReturnValue_247090787197721297604732917092203102821567031853();
				internal delegate global::Custom get_ValuesCallback_243744026731760932226333131017956768037587011670();
				internal delegate global::Custom get_ValuesReturnValue_243744026731760932226333131017956768037587011670();
				internal delegate void set_ValuesCallback_628925452417898181443764820763717280972249757505(global::Custom @value);
				internal delegate bool ArgEvaluationForCustom(global::Custom @value);
				
				internal sealed class ArgForCustom
					: global::Rocks.Argument
				{
					private readonly global::ProjectionsForIHaveCustomRefStruct.ArgEvaluationForCustom? evaluation;
					private readonly global::Rocks.ValidationState validation;
					
					internal ArgForCustom() => this.validation = global::Rocks.ValidationState.None;
					
					internal ArgForCustom(global::ProjectionsForIHaveCustomRefStruct.ArgEvaluationForCustom @evaluation)
					{
						this.evaluation = @evaluation;
						this.validation = global::Rocks.ValidationState.Evaluation;
					}
					
					public bool IsValid(global::Custom @value) =>
						this.validation switch
						{
							global::Rocks.ValidationState.None => true,
							global::Rocks.ValidationState.Evaluation => this.evaluation!(@value),
							_ => throw new global::System.NotSupportedException("Invalid validation state."),
						};
				}
			}
			
			internal static class CreateExpectationsOfIHaveCustomRefStructExtensions
			{
				internal static global::Rocks.Expectations.MethodExpectations<global::IHaveCustomRefStruct> Methods(this global::Rocks.Expectations.Expectations<global::IHaveCustomRefStruct> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertyExpectations<global::IHaveCustomRefStruct> Properties(this global::Rocks.Expectations.Expectations<global::IHaveCustomRefStruct> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertyGetterExpectations<global::IHaveCustomRefStruct> Getters(this global::Rocks.Expectations.PropertyExpectations<global::IHaveCustomRefStruct> @self) =>
					new(@self);
				
				internal static global::Rocks.Expectations.PropertySetterExpectations<global::IHaveCustomRefStruct> Setters(this global::Rocks.Expectations.PropertyExpectations<global::IHaveCustomRefStruct> @self) =>
					new(@self);
				
				internal static global::IHaveCustomRefStruct Instance(this global::Rocks.Expectations.Expectations<global::IHaveCustomRefStruct> @self)
				{
					if (!@self.WasInstanceInvoked)
					{
						@self.WasInstanceInvoked = true;
						var @mock = new RockIHaveCustomRefStruct(@self);
						@self.MockType = @mock.GetType();
						return @mock;
					}
					else
					{
						throw new global::Rocks.Exceptions.NewMockInstanceException("Can only create a new mock once.");
					}
				}
				
				private sealed class RockIHaveCustomRefStruct
					: global::IHaveCustomRefStruct
				{
					private readonly global::System.Collections.Generic.Dictionary<int, global::System.Collections.Generic.List<global::Rocks.HandlerInformation>> handlers;
					
					public RockIHaveCustomRefStruct(global::Rocks.Expectations.Expectations<global::IHaveCustomRefStruct> @expectations)
					{
						this.handlers = @expectations.Handlers;
					}
					
					[global::Rocks.MemberIdentifier(0, "global::Custom Foo(global::Custom @values)")]
					public global::Custom Foo(global::Custom @values)
					{
						if (this.handlers.TryGetValue(0, out var @methodHandlers))
						{
							foreach (var @methodHandler in @methodHandlers)
							{
								if (((global::ProjectionsForIHaveCustomRefStruct.ArgForCustom)@methodHandler.Expectations[0]).IsValid(@values!))
								{
									@methodHandler.IncrementCallCount();
									var @result = @methodHandler.Method is not null ?
										((global::ProjectionsForIHaveCustomRefStruct.FooCallback_247090787197721297604732917092203102821567031853)@methodHandler.Method)(@values!) :
										((global::Rocks.HandlerInformation<global::ProjectionsForIHaveCustomRefStruct.FooReturnValue_247090787197721297604732917092203102821567031853>)@methodHandler).ReturnValue!.Invoke();
									return @result!;
								}
							}
							
							throw new global::Rocks.Exceptions.ExpectationException("No handlers match for global::Custom Foo(global::Custom @values)");
						}
						
						throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for global::Custom Foo(global::Custom @values)");
					}
					
					[global::Rocks.MemberIdentifier(1, "get_Values()")]
					[global::Rocks.MemberIdentifier(2, "set_Values(value)")]
					public global::Custom Values
					{
						get
						{
							if (this.handlers.TryGetValue(1, out var @methodHandlers))
							{
								var @methodHandler = @methodHandlers[0];
								@methodHandler.IncrementCallCount();
								var @result = @methodHandler.Method is not null ?
									((global::ProjectionsForIHaveCustomRefStruct.get_ValuesCallback_243744026731760932226333131017956768037587011670)@methodHandler.Method)() :
									((global::Rocks.HandlerInformation<global::ProjectionsForIHaveCustomRefStruct.get_ValuesReturnValue_243744026731760932226333131017956768037587011670>)@methodHandler).ReturnValue!.Invoke();
								return @result!;
							}
							
							throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for get_Values())");
						}
						set
						{
							if (this.handlers.TryGetValue(2, out var @methodHandlers))
							{
								var @foundMatch = false;
								foreach (var @methodHandler in @methodHandlers)
								{
									if (((global::ProjectionsForIHaveCustomRefStruct.ArgForCustom)@methodHandler.Expectations[0]).IsValid(value!))
									{
										@methodHandler.IncrementCallCount();
										@foundMatch = true;
										
										if (@methodHandler.Method is not null)
										{
											((global::ProjectionsForIHaveCustomRefStruct.set_ValuesCallback_628925452417898181443764820763717280972249757505)@methodHandler.Method)(value!);
										}
										
										if (!@foundMatch)
										{
											throw new global::Rocks.Exceptions.ExpectationException("No handlers match for set_Values(value)");
										}
										
										break;
									}
								}
							}
							else
							{
								throw new global::Rocks.Exceptions.ExpectationException("No handlers were found for set_Values(value)");
							}
						}
					}
				}
			}
			
			internal static class MethodExpectationsOfIHaveCustomRefStructExtensions
			{
				internal static global::Rocks.MethodAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.FooCallback_247090787197721297604732917092203102821567031853, global::ProjectionsForIHaveCustomRefStruct.FooReturnValue_247090787197721297604732917092203102821567031853> Foo(this global::Rocks.Expectations.MethodExpectations<global::IHaveCustomRefStruct> @self, global::ProjectionsForIHaveCustomRefStruct.ArgForCustom @values)
				{
					global::System.ArgumentNullException.ThrowIfNull(@values);
					return new global::Rocks.MethodAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.FooCallback_247090787197721297604732917092203102821567031853, global::ProjectionsForIHaveCustomRefStruct.FooReturnValue_247090787197721297604732917092203102821567031853>(@self.Add<global::ProjectionsForIHaveCustomRefStruct.FooReturnValue_247090787197721297604732917092203102821567031853>(0, new global::System.Collections.Generic.List<global::Rocks.Argument>(1) { @values }));
				}
			}
			
			internal static class PropertyGetterExpectationsOfIHaveCustomRefStructExtensions
			{
				internal static global::Rocks.PropertyAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.get_ValuesCallback_243744026731760932226333131017956768037587011670, global::ProjectionsForIHaveCustomRefStruct.get_ValuesReturnValue_243744026731760932226333131017956768037587011670> Values(this global::Rocks.Expectations.PropertyGetterExpectations<global::IHaveCustomRefStruct> @self) =>
					new global::Rocks.PropertyAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.get_ValuesCallback_243744026731760932226333131017956768037587011670, global::ProjectionsForIHaveCustomRefStruct.get_ValuesReturnValue_243744026731760932226333131017956768037587011670>(@self.Add<global::ProjectionsForIHaveCustomRefStruct.get_ValuesReturnValue_243744026731760932226333131017956768037587011670>(1, new global::System.Collections.Generic.List<global::Rocks.Argument>()));
			}
			internal static class PropertySetterExpectationsOfIHaveCustomRefStructExtensions
			{
				internal static global::Rocks.PropertyAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.set_ValuesCallback_628925452417898181443764820763717280972249757505> Values(this global::Rocks.Expectations.PropertySetterExpectations<global::IHaveCustomRefStruct> @self, global::Rocks.Argument<global::ProjectionsForIHaveCustomRefStruct.ArgForCustom> @value) =>
					new global::Rocks.PropertyAdornments<global::IHaveCustomRefStruct, global::ProjectionsForIHaveCustomRefStruct.set_ValuesCallback_628925452417898181443764820763717280972249757505>(@self.Add(2, new global::System.Collections.Generic.List<global::Rocks.Argument>(1) { @value }));
			}
			
			""";

		await TestAssistants.RunAsync<RockCreateGenerator>(code,
			new[] { (typeof(RockCreateGenerator), "IHaveCustomRefStruct_Rock_Create.g.cs", generatedCode) },
			Enumerable.Empty<DiagnosticResult>()).ConfigureAwait(false);
	}
}